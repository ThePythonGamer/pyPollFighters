In [10]: session.commit()
---------------------------------------------------------------------------
ProgrammingError                          Traceback (most recent call last)
~/.pyenv/versions/3.9.2/envs/pyPollFighters/lib/python3.9/site-packages/sqlalchemy/engine/base.py in _execute_context(self, dialect, constructor, statement, parameters, execution_options, *args, **kw)
   1704                 if not evt_handled:
-> 1705                     self.dialect.do_execute(
   1706                         cursor, statement, parameters, context

~/.pyenv/versions/3.9.2/envs/pyPollFighters/lib/python3.9/site-packages/sqlalchemy/engine/default.py in do_execute(self, cursor, statement, parameters, context)
    680     def do_execute(self, cursor, statement, parameters, context=None):
--> 681         cursor.execute(statement, parameters)
    682 

ProgrammingError: can't adapt type 'QuestionType'

The above exception was the direct cause of the following exception:

ProgrammingError                          Traceback (most recent call last)
<ipython-input-10-83a1dbdbd92a> in <module>
----> 1 session.commit()

~/.pyenv/versions/3.9.2/envs/pyPollFighters/lib/python3.9/site-packages/sqlalchemy/orm/session.py in commit(self)
   1404                 raise sa_exc.InvalidRequestError("No transaction is begun.")
   1405 
-> 1406         self._transaction.commit(_to_root=self.future)
   1407 
   1408     def prepare(self):

~/.pyenv/versions/3.9.2/envs/pyPollFighters/lib/python3.9/site-packages/sqlalchemy/orm/session.py in commit(self, _to_root)
    818         self._assert_active(prepared_ok=True)
    819         if self._state is not PREPARED:
--> 820             self._prepare_impl()
    821 
    822         if self._parent is None or self.nested:

~/.pyenv/versions/3.9.2/envs/pyPollFighters/lib/python3.9/site-packages/sqlalchemy/orm/session.py in _prepare_impl(self)
    797                 if self.session._is_clean():
    798                     break
--> 799                 self.session.flush()
    800             else:
    801                 raise exc.FlushError(

~/.pyenv/versions/3.9.2/envs/pyPollFighters/lib/python3.9/site-packages/sqlalchemy/orm/session.py in flush(self, objects)
   3222         try:
   3223             self._flushing = True
-> 3224             self._flush(objects)
   3225         finally:
   3226             self._flushing = False

~/.pyenv/versions/3.9.2/envs/pyPollFighters/lib/python3.9/site-packages/sqlalchemy/orm/session.py in _flush(self, objects)
   3362         except:
   3363             with util.safe_reraise():
-> 3364                 transaction.rollback(_capture_exception=True)
   3365 
   3366     def bulk_save_objects(

~/.pyenv/versions/3.9.2/envs/pyPollFighters/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py in __exit__(self, type_, value, traceback)
     68             self._exc_info = None  # remove potential circular references
     69             if not self.warn_only:
---> 70                 compat.raise_(
     71                     exc_value,
     72                     with_traceback=exc_tb,

~/.pyenv/versions/3.9.2/envs/pyPollFighters/lib/python3.9/site-packages/sqlalchemy/util/compat.py in raise_(***failed resolving arguments***)
    196 
    197         try:
--> 198             raise exception
    199         finally:
    200             # credit to

~/.pyenv/versions/3.9.2/envs/pyPollFighters/lib/python3.9/site-packages/sqlalchemy/orm/session.py in _flush(self, objects)
   3322             self._warn_on_events = True
   3323             try:
-> 3324                 flush_context.execute()
   3325             finally:
   3326                 self._warn_on_events = False

~/.pyenv/versions/3.9.2/envs/pyPollFighters/lib/python3.9/site-packages/sqlalchemy/orm/unitofwork.py in execute(self)
    451         else:
    452             for rec in topological.sort(self.dependencies, postsort_actions):
--> 453                 rec.execute(self)
    454 
    455     def finalize_flush_changes(self):

~/.pyenv/versions/3.9.2/envs/pyPollFighters/lib/python3.9/site-packages/sqlalchemy/orm/unitofwork.py in execute(self, uow)
    625     @util.preload_module("sqlalchemy.orm.persistence")
    626     def execute(self, uow):
--> 627         util.preloaded.orm_persistence.save_obj(
    628             self.mapper,
    629             uow.states_for_mapper_hierarchy(self.mapper, False, False),

~/.pyenv/versions/3.9.2/envs/pyPollFighters/lib/python3.9/site-packages/sqlalchemy/orm/persistence.py in save_obj(base_mapper, states, uowtransaction, single)
    240         )
    241 
--> 242         _emit_insert_statements(
    243             base_mapper,
    244             uowtransaction,

~/.pyenv/versions/3.9.2/envs/pyPollFighters/lib/python3.9/site-packages/sqlalchemy/orm/persistence.py in _emit_insert_statements(base_mapper, uowtransaction, mapper, table, insert, bookkeeping)
   1217                         )
   1218                     else:
-> 1219                         result = connection._execute_20(
   1220                             statement,
   1221                             params,

~/.pyenv/versions/3.9.2/envs/pyPollFighters/lib/python3.9/site-packages/sqlalchemy/engine/base.py in _execute_20(self, statement, parameters, execution_options)
   1518             )
   1519         else:
-> 1520             return meth(self, args_10style, kwargs_10style, execution_options)
   1521 
   1522     def exec_driver_sql(

~/.pyenv/versions/3.9.2/envs/pyPollFighters/lib/python3.9/site-packages/sqlalchemy/sql/elements.py in _execute_on_connection(self, connection, multiparams, params, execution_options)
    311     ):
    312         if self.supports_execution:
--> 313             return connection._execute_clauseelement(
    314                 self, multiparams, params, execution_options
    315             )

~/.pyenv/versions/3.9.2/envs/pyPollFighters/lib/python3.9/site-packages/sqlalchemy/engine/base.py in _execute_clauseelement(self, elem, multiparams, params, execution_options)
   1387             linting=self.dialect.compiler_linting | compiler.WARN_LINTING,
   1388         )
-> 1389         ret = self._execute_context(
   1390             dialect,
   1391             dialect.execution_ctx_cls._init_compiled,

~/.pyenv/versions/3.9.2/envs/pyPollFighters/lib/python3.9/site-packages/sqlalchemy/engine/base.py in _execute_context(self, dialect, constructor, statement, parameters, execution_options, *args, **kw)
   1746 
   1747         except BaseException as e:
-> 1748             self._handle_dbapi_exception(
   1749                 e, statement, parameters, cursor, context
   1750             )

~/.pyenv/versions/3.9.2/envs/pyPollFighters/lib/python3.9/site-packages/sqlalchemy/engine/base.py in _handle_dbapi_exception(self, e, statement, parameters, cursor, context)
   1927                 util.raise_(newraise, with_traceback=exc_info[2], from_=e)
   1928             elif should_wrap:
-> 1929                 util.raise_(
   1930                     sqlalchemy_exception, with_traceback=exc_info[2], from_=e
   1931                 )

~/.pyenv/versions/3.9.2/envs/pyPollFighters/lib/python3.9/site-packages/sqlalchemy/util/compat.py in raise_(***failed resolving arguments***)
    196 
    197         try:
--> 198             raise exception
    199         finally:
    200             # credit to

~/.pyenv/versions/3.9.2/envs/pyPollFighters/lib/python3.9/site-packages/sqlalchemy/engine/base.py in _execute_context(self, dialect, constructor, statement, parameters, execution_options, *args, **kw)
   1703                             break
   1704                 if not evt_handled:
-> 1705                     self.dialect.do_execute(
   1706                         cursor, statement, parameters, context
   1707                     )

~/.pyenv/versions/3.9.2/envs/pyPollFighters/lib/python3.9/site-packages/sqlalchemy/engine/default.py in do_execute(self, cursor, statement, parameters, context)
    679 
    680     def do_execute(self, cursor, statement, parameters, context=None):
--> 681         cursor.execute(statement, parameters)
    682 
    683     def do_execute_no_params(self, cursor, statement, context=None):

ProgrammingError: (psycopg2.ProgrammingError) can't adapt type 'QuestionType'
[SQL: INSERT INTO questions (text, question_type_id) VALUES (%(text)s, %(question_type_id)s) RETURNING questions.id]
[parameters: {'text': 'What time is it?', 'question_type_id': <poll_fighters.models.QuestionType object at 0x7f83f35bdc40>}]
(Background on this error at: http://sqlalche.me/e/14/f405)
